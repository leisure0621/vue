{"./":{"url":"./","title":"Introduction","keywords":"","body":"【狂神说Java】Spring5最新完整教程IDEA版通俗易懂 跟著狂神學習，並記錄課程所學 每一個筆記章節下方均有包含相應的課程影片 多溝通 多問 好學 才能讓自己更進步 未來會學習更多關於 Spring MVC、Spring Boot 相關，學完此課程後再更新 開發工具 Intellij IDEA jdk1.8.0_231 apache-maven-3.6.3 "},"慕課網/01.VUE-项目-首页开发/1-1.Vue项目预热-环境配置/1-1.Vue项目预热-环境配置.html":{"url":"慕課網/01.VUE-项目-首页开发/1-1.Vue项目预热-环境配置/1-1.Vue项目预热-环境配置.html","title":"1-1.Vue项目预热-环境配置","keywords":"","body":"01. 開發前準備 描述 Nodejs v10.21.0 版本 NPM 6.14.4 系統 win10 02. 打開 CMD 窗口 電腦左下角有個搜尋框，在上面輸入 CMD 開啟 命令提示字元 窗口開啟後模樣 03. 使用 NPM 安裝 VUE-CLI 打開 命令提示字元，並輸入 npm i -g vue-cli 全域配置 vue-cli 輸入 vue -V 確認 vue 版本 輸入 cd {你要創建項目的目錄} 進入你要創建 procject 的資料夾/目錄，相當於 java 的 workspace 輸入 vue init webpack my-project，這行的意思是 我用 vue 創建一個基於 webpack 打包工具創見的項目，並存放至 my-project 資料夾下 如果是初次創建的話會顯示 Project name ，提示你輸入項目名稱，且項目名稱 不能包含大寫字母 。輸入完後點擊 Enter。 如果已經建立過的話則會提示 Target directory exists. Continue?，這時選擇 yes 就會重新構建) ? Project name (my-project) 提示 輸入項目描述 ，可以直接 Enter 使用預設就好 ? Project description (A Vue.js project) 輸入項目作者，可預設也可以自行輸入 ? Author (leisure0621 ) 採用什麼編譯模式運行時編譯或運行時和普通情況下編譯，在這我們選擇 Runtime + Compiler ? Vue build (Use arrow keys) > Runtime + Compiler: recommended for most users Runtime-only: about 6KB lighter min+gzip, but templates (or any Vue-specific HTML) are ONLY allowed in .vue files - re 是否要安裝 vue-router? 選 Y ? Install vue-router? (Y/n) 編碼時是否要使用 ESLint 作為你的程式碼檢查工具? 選 Y ? Use ESLint to lint your code? (Y/n) 如果步驟 10 選 Y，則會再提示你要使用的檢測規範，在此選擇 Standard 就可以 > Standard (https://github.com/standard/standard) Airbnb (https://github.com/airbnb/javascript) none (configure it yourself) 是否使用自動化測試工具，選擇 N ? Set up unit tests (Y/n) 這也是問你是不是使用 e2e 端的測試，選擇 N ? Setup e2e tests with Nightwatch? (Y/n) 你要使用哪個工具進行項目管理? 選擇 NPM ? Should we run `npm install` for you after the project has been created? (recommended) (Use arrow keys) > Yes, use NPM Yes, use Yarn No, I will handle that myself 在創建完成後會提示項目的運行方法 To get started: cd my-project npm run dev 開啟 http://localhost:8080 看到此畫面就執行成功 (Ctrl + C 可以停止運行) 04. 你也可以比照圖片中的步驟 第一步 : 先執行完 npm i -g vue-cli，全域安裝 vue-cli 後，找個地方安裝你的 project。 第二步 : 執行 vue init webpack {project名稱，同時創資料夾} 第三步 : 後續步驟照圖執行就好 05. 一些錯誤的解決方法 'eslint' 不是内部或外部命令 如果你出現這個錯誤，可以到你的 project 下執行 npm cache clean --force 接著進入 ..\\nodejs\\node_modules\\npm\\docs\\public\\cli-commands\\npm-cache 執行 npm cache clean --force (如果 npm-cache 你不知道位置，請在你的電腦中搜尋此資料夾) 上述步驟完成後執行 npm install(安裝依賴至node_modules) 接著 npm run build(執行項目構建) 然後 npm run dev(運行) 06. vue-cli 和 @vue/cli 差異 vue-cli : vue2 @vue/cli : vue3 命令提示字元 : 有時稱為命令行，有時稱為終端，有時也稱為命令提示字元。所以有使用 VSCode 的話可直接打開終端機使用。以 Windows 來說，可以在搜尋欄位輸入 cmd 開啟 Vue项目报错：'eslint' 不是内部或外部命令，'webpack-dev-server' 不是内部或外部命令，也不是可运行的程序 "},"慕課網/01.VUE-项目-首页开发/1-3.Vue项目预热-项目代码介绍/1-3.Vue项目预热-项目代码介绍.html":{"url":"慕課網/01.VUE-项目-首页开发/1-3.Vue项目预热-项目代码介绍/1-3.Vue项目预热-项目代码介绍.html","title":"1-3.Vue项目预热-项目代码介绍","keywords":"","body":"項目結構與說明 . │ .babelrc # 語法解析器， │ .editorconfig # 配置編輯器中的設置(例如縮排) │ .eslintignore # 設定不受檢測的目錄或文件 │ .eslintrc.js # 檢測程式碼風格 │ .gitignore # git忽略提交目錄或文件(不想被git掃到的) │ .postcssrc.js # 配置css兼容...等等 │ index.html # 首頁模板文件 │ package-lock.json # 鎖定第三方資源包的版本，保持團隊統一 │ package.json # 各種配置的第三方資源包 (相當於 jar) │ README.md # vue的說明文件 │ ├─build # 項目打包的webpack配置內容 │ build.js # 額外webpack配置 │ check-versions.js │ logo.png │ utils.js │ vue-loader.conf.js │ webpack.base.conf.js # 基礎webpack配置 │ webpack.dev.conf.js # 開發webpack配置 │ webpack.prod.conf.js # 線上webpack配置 │ ├─config # 配置文件 │ dev.env.js # 開發環境配置訊息 │ index.js # 基礎配置信息 │ prod.env.js # 線上環境配置信息 │ ├─node_modules # 第三方資源包安裝目錄 (砍了後可用 num install 裝回) │ ├─src # 原代碼 │ │ App.vue # 根組件 │ │ main.js # 入口文件 │ │ │ ├─assets # 圖片等相關資源 │ │ logo.png │ │ │ ├─components # 小組件 │ │ HelloWorld.vue │ │ │ └─router # 路由 │ index.js │ └─static # 靜態資源/圖片/json...等等 .gitkeep "},"慕課網/01.VUE-项目-首页开发/1-4.Vue项目预热-单文件组件与Vue中的路由（1）/1-4.Vue项目预热-单文件组件与Vue中的路由（1）.html":{"url":"慕課網/01.VUE-项目-首页开发/1-4.Vue项目预热-单文件组件与Vue中的路由（1）/1-4.Vue项目预热-单文件组件与Vue中的路由（1）.html","title":"1-4.Vue项目预热-单文件组件与Vue中的路由（1）","keywords":"","body":""}}