{"./":{"url":"./","title":"Introduction","keywords":"","body":" # [【狂神说Java】Spring5最新完整教程IDEA版通俗易懂](https://www.bilibili.com/video/BV1WE411d7Dv) - 跟著狂神學習，並記錄課程所學 - 每一個筆記章節下方均有包含相應的課程影片 > 多溝通 多問 好學 才能讓自己更進步 - 未來會學習更多關於 Spring MVC、Spring Boot 相關，學完此課程後再更新 # 開發工具 - Intellij IDEA - jdk1.8.0_231 - apache-maven-3.6.3 Vue 在這份文件當中我們可以學習到 : (1) 使用 Vue 2 構建 Vue 項目 (2) 使用 Vue 3 構建 Vue 項目 範例 : (如果學習中有檔案無法下載的部分，可在此 github 下載完整項目) (1) vue_workspace - vue1 (1) 下載後先在本地執行 npm install 安裝插件 (2) 執行 npm run dev 即可運行項目 "},"慕課網/01.首頁開發/01.環境配置/01.環境配置.html":{"url":"慕課網/01.首頁開發/01.環境配置/01.環境配置.html","title":"01.環境配置","keywords":"","body":"環境配置 開發前準備 打開 CMD 窗口 使用 NPM 安裝 VUE-CLI 你也可以比照圖片中的步驟 一些錯誤的解決方法 'eslint' 不是内部或外部命令 提示輸入帳密 提示需要輸入 npm audit fix 或 npm audit fix --force vue-cli 和 @vue/cli 差異 npm 指令說明 01. 開發前準備 描述 Nodejs v10.21.0 版本 NPM 6.14.4 系統 win10 02. 打開 CMD 窗口 步驟一 : 電腦左下角有個搜尋框，在上面輸入 CMD 步驟二 : 開啟 命令提示字元 步驟三 : 窗口開啟後模樣 03. 使用 NPM 安裝 VUE-CLI 步驟一 : 打開 命令提示字元，並輸入 npm i -g vue-cli 全域配置 vue-cli 步驟二 : 輸入 vue -V 確認 vue 版本 步驟三 : 輸入 cd {你要創建項目的目錄} 進入你要創建 procject 的資料夾/目錄，相當於 java 的 workspace 步驟四 : 輸入 vue init webpack my-project，這行的意思是 我用 vue 創建一個基於 webpack 打包工具創見的項目，並存放至 my-project 資料夾下 步驟五 : 如果是初次創建的話會顯示 Project name ，提示你輸入項目名稱，且項目名稱 不能包含大寫字母 。輸入完後點擊 Enter。 如果已經建立過的話則會提示 Target directory exists. Continue?，這時選擇 yes 就會重新構建) ? Project name (my-project) 步驟六 : 提示 輸入項目描述 ，可以直接 Enter 使用預設就好 ? Project description (A Vue.js project) 步驟七 : 輸入項目作者，可預設也可以自行輸入 ? Author (leisure**** ) 步驟八 : 採用什麼編譯模式 ? 運行時編譯、運行時和普通情況下編譯，在這我們選擇 Runtime + Compiler ? Vue build (Use arrow keys) > Runtime + Compiler: recommended for most users Runtime-only: about 6KB lighter min+gzip, but templates (or any Vue-specificHTML) are ONLY allowed in .vue files - render functions are required elsewhere 步驟九 : 是否要安裝 vue-router? 選 Y ? Install vue-router? (Y/n) 步驟十 : 編碼時是否要使用 ESLint 作為你的程式碼檢查工具? 選 Y ? Use ESLint to lint your code? (Y/n) 步驟十一 : 如果步驟十選 Y，則會再提示你要使用的檢測規範，在此選擇 Standard 就可以 > Standard (https://github.com/standard/standard) Airbnb (https://github.com/airbnb/javascript) none (configure it yourself) 步驟十二 : 是否使用自動化測試工具，選擇 N ? Set up unit tests (Y/n) 步驟十三 : 這也是問你是不是使用 e2e 端的測試，選擇 N ? Setup e2e tests with Nightwatch? (Y/n) 步驟十四 : 你要使用哪個工具進行項目管理? 選擇 NPM ? Should we run `npm install` for you after the project has been created? (recommended) (Use arrow keys) > Yes, use NPM Yes, use Yarn No, I will handle that myself 步驟十五 : 在創建完成後會提示項目的運行方法 To get started: cd my-project npm run dev 步驟十六 : 開啟 http://localhost:8080 看到此畫面就執行成功 (Ctrl + C 可以停止運行) 04. 圖文總結 步驟一 : 先執行完 npm i -g vue-cli，全域安裝 vue-cli 後，找個地方安裝你的 project。 步驟二 : 執行 vue init webpack {project名稱，同時創資料夾} 步驟三 : 後續步驟照圖執行就好 05. 一些錯誤的解決方法 錯誤一 : 'eslint' 不是内部或外部命令 如果你出現這個錯誤，可以到你的 project 下執行 npm cache clean --force 接著進入 ..\\nodejs\\node_modules\\npm\\docs\\public\\cli-commands\\npm-cache 執行 npm cache clean --force (如果 npm-cache 你不知道位置，請在你的電腦中搜尋此資料夾) 上述步驟完成後執行 npm install(安裝依賴至node_modules) 接著 npm run build(執行項目構建) 然後 npm run dev(運行) 錯誤二 : 提示輸入帳密 出現這個問題的主要原因是因為，你的 port 可能被佔用了。表示你的電腦/系統中，有工具使用了 8080 這個 port 號，那麼我們就要關閉工具，或關閉這個進程。 步驟一 : 查詢占用 8080 的執行 ID netstat -o -n -a | findstr :8080 步驟二 : 3116 就是目前查詢出來的 ID (要注意 ID 是會變動的) TCP 0.0.0.0:3000 0.0.0.0:0 LISTENING 3116 步驟三 : 停掉 3116 即可 (記得 3116 要改成當下被占用的 ID) taskkill /F /PID 3116 錯誤三 : 提示需要輸入 npm audit fix 或 npm audit fix --force 解決的問題... found 28 vulnerabilities (16 moderate, 11 high, 1 critical) run npm audit fix to fix them, or npm audit for details 指令 作用 npm audit fix 為將不安全的依賴自動更新到兼容性版本 npm audit fix --force 為強制執行 audit fix 來安裝最新的依賴 由於 npm audit fix --force 強制執行的原因，所以連 webpack 都會被更新，這就會造成版本不兼容的情形，同時在 npm run dev 會出現以下提醒 We will use \"npm\" to install the CLI via \"npm install -D webpack-cli\". Do you want to install 'webpack-cli' (yes/no): 但你即使依照說明安裝了 webpack-cli 也會報錯 [webpack-cli] Error: Unknown option '--inline' [webpack-cli] Run 'webpack --help' to see available commands and options 因為這個專案目前是以 vue2 作範例，所以可以看見從原本的 webpack 版本 \"webpack\": \"^3.6.0\", \"webpack-dev-server\": \"^2.9.1\", 被更新到新的版本了 \"webpack\": \"^5.65.0\", \"webpack-dev-server\": \"^4.7.2\", 解決方法一 : 步驟一 : 執行 npm remove webpack-dev-server 移除已安裝的 webpack-dev-server 步驟二 : 執行 npm install webpack-dev-server@2.9.1 指定安裝 webpack-dev-server 的 2.9.1 版本，安裝好即可 npm run dev 啟用 步驟三 : 執行 npm remove webpack，因為會出現 webpack 版本過高而 webpack-dev-server 過低不兼容的情形，所以也要一併降版 步驟四 : 執行 npm install --save-dev webpack@3.6.0，指定安裝 webpack 的 3.6.0 版本 步驟五 : 執行 npm uni extract-text-webpack-plugin 步驟六 : 執行 npm i extract-text-webpack-plugin@3.0.0 步驟七 : 執行 npm uni copy-webpack-plugin 步驟八 : 執行 npm i extract-text-webpack-plugin@4.0.1 步驟九 : 執行 npm uni css-loader 步驟十 : 執行 npm i css-loader@0.28.0 步驟十一 : 執行 npm uni webpack-cli 將不必要的 webpack-cli 卸載 步驟十二 : 搜尋 url-loader 並在在圖片的部分添加 esModule: false 可以解決圖片無法加載的問題，如果有其他 url-loader 上的問題就在 options 中添加 esModule: false 就好 (主要是 file-loader 默認使用 ES 語法。而 vue 是使用 CommonJS 語法，要統一才可以 esModule: false 表示不使用 ES語法) { test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/, loader: 'url-loader', options: { limit: 10000, name: utils.assetsPath('img/[name].[hash:7].[ext]'), esModule: false } }, 步驟十三 : 做完步驟十二就可執行 npm run dev (因為強制升級版本會造成一系列版本不兼容的情形，所以降版的話需要一次降下來) 解決方法二 : 步驟一 : 刪除 package-lock.json 步驟二 : 修改 package.json (如果你是想要還原成 vue2 預設安裝的樣子可以下載此檔 ; 如果是你正在做的工作項目就請複製自己版本庫中的) 步驟三 : 刪除 node_modules 步驟四 : 在你的 project 下執行 npm install 重新生成 package-lock.json 並安裝相應的功能至 node_modules 06. vue-cli 和 @vue/cli 差異 vue-cli : vue2 @vue/cli : vue3 07. npm 指令說明 指令 作用 npm run bulid 構建 vue 項目成可上線的前端項目，會生成並產出在 dist 目錄中 npm run dev 預設為運行環境(含熱部屬) npm run start 預設與 npm run dev 作用相同 npm install 重裝 node_modules (重裝需要時間 不會跑進度條 ，請耐心等待) 命令提示字元 : 有時稱為命令行，有時稱為終端，有時也稱為命令提示字元。所以有使用 VSCode 的話可直接打開終端機使用。以 Windows 來說，可以在搜尋欄位輸入 cmd 開啟 npm install 後會新增在 package 的 dependencies 中，如果要新增在 devDependencies 則要使用 npm install --save-dev，而 --save-dev 可以縮寫成 -D 學習地圖對應: 慕克網 > 步骤二：Vue基础+仿去哪网电商实战 > 4.Vue与React高级框架开发 > 项目-首页开发 > 1-1.Vue项目预热-环境配置 Vue项目报错：'eslint' 不是内部或外部命令，'webpack-dev-server' 不是内部或外部命令，也不是可运行的程序 对Vue中 runtime-compiler 和 runtime-only 两种模式的理解 vue-Router中name的使用 [CSS] Sass 入門教學-新手上路重點摘要(上) 用cmd關閉8080埠 vue中npm run dev命令和npm run start命令的区别、作用 前端项目目录结构演变 webpack-dev-server实现项目热部署 关于 'npm audit fix --force' 后报错 Error: Cannot find module 'webpack/bin/config-yargs' 报错原因, webpack@4.X踩的坑~ 运行webpack报错_ValidationError2.default(ajv.errors, name) 本指南介绍了安装 webpack 的各种方法 [NodeJs] npm --save 到底是什麼? --save-dev 不一樣嗎? Vue报错： this.getOptions is not a function 解决Vue中img图像src变成\"[object Module]\"无法正确加载的问题 npm install命令详解 很多人上来就删除的package-lock.json，还有这么多你不知道的！ "},"慕課網/01.首頁開發/02.項目結構與說明/02.項目結構與說明.html":{"url":"慕課網/01.首頁開發/02.項目結構與說明/02.項目結構與說明.html","title":"02.項目結構與說明","keywords":"","body":"項目結構與說明 項目結構與說明 01. 項目結構與說明 . │ .babelrc # 語法解析器 │ .editorconfig # 配置編輯器中的設置(例如縮排) │ .eslintignore # 設定不受檢測的目錄或文件 │ .eslintrc.js # 檢測程式碼風格 │ .gitignore # git忽略提交目錄或文件(不想被git掃到的) │ .postcssrc.js # 配置css兼容...等等 │ index.html # 首頁模板文件 │ package-lock.json # 鎖定第三方資源包的版本，保持團隊統一 │ package.json # 各種配置的第三方資源包 (相當於 jar) │ README.md # vue的說明文件 │ ├─build # 項目打包的webpack配置內容 │ build.js # 額外webpack配置 │ check-versions.js │ logo.png │ utils.js │ vue-loader.conf.js │ webpack.base.conf.js # 基礎webpack配置 │ webpack.dev.conf.js # 開發webpack配置 │ webpack.prod.conf.js # 線上webpack配置 │ ├─config # 配置文件 │ dev.env.js # 開發環境配置訊息 │ index.js # 基礎配置信息 │ prod.env.js # 線上環境配置信息 │ ├─node_modules # 第三方資源包安裝目錄 (砍了後可用 num install 裝回) │ ├─src # 原代碼 │ │ App.vue # 根組件 │ │ main.js # 入口文件 │ │ │ ├─assets # 圖片等相關資源 │ │ logo.png │ │ │ ├─components # 小組件 │ │ HelloWorld.vue │ │ │ └─router # 路由 │ index.js │ └─static # 靜態資源/圖片/json...等等 .gitkeep 學習地圖對應: 慕克網 > 步骤二：Vue基础+仿去哪网电商实战 > 4.Vue与React高级框架开发 > 项目-首页开发 > 1-3.Vue项目预热-项目代码介绍 什麼是 Browserlist？設定 Autoprefixer、Stylelint 來支援你想要的任何瀏覽器！ "},"慕課網/01.首頁開發/03.Vue項目的基本結構與說明/03.Vue項目的基本結構與說明.html":{"url":"慕課網/01.首頁開發/03.Vue項目的基本結構與說明/03.Vue項目的基本結構與說明.html","title":"03.Vue項目的基本結構與說明","keywords":"","body":"Vue 項目的基本結構與說明 src 文件 main.js 文件 App.vue 組成 路由 加載多個頁面資料 總結 Eslint 排錯 01. src 文件 vue 的 src 文件就相當於 java 的 src，我們會將主要的功能開發在這個目錄下進行 VUE : JAVA : 02. main.js 文件 他是整個項目的入口文件 import Vue from 'vue' import App from './App' // 局部組件，並命名為 APP。而APP這個局部組件的位置就是當前這個目錄下的APP路徑。以目前這個例子來說，會先找 App.vue 的文件 import router from './router' Vue.config.productionTip = false // new Vue() : Vue 的根實例，掛載到 id 等於 APP 的一個實例上 new Vue({ el: '#app', router, // 相當於 router:router components: { App }, // 這是ES6的語法，實際上應為 {App:App}，但在ES6中Key跟value都相同則可省略 template: '' }) id 等於 APP 的實例在哪呢 ? 實際上它就在 index.html 上 my-project 03. App.vue 組成 當一個文件以 *.vue 作為副檔名時，稱之為 單文件組件。實際上放的就是 Vue 組件 在模板標籤(template)中會放置頁面結構 export default { name: 'App' } #app { font-family: 'Avenir', Helvetica, Arial, sans-serif; -webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; text-align: center; color: #2c3e50; margin-top: 60px; } 04. 路由 根據網址的不同，返回不同的內容給用戶 (即，根據 url 的不同返回不同功能) 如果在 App.vue 的 template 中查看的話就是 router-view 那麼，什麼是 router-view 呢? 就是，當前路由地址所對應的內容 在對應回 main.js 文件時，可以看見在這時候就有引用 router import Vue from 'vue' import App from './App' import router from './router' // 在這時被引入 Vue.config.productionTip = false new Vue({ el: '#app', router, // 並使用 components: { App }, template: '' }) 所以我們可以推論出，router就是Vue配置部分的內容 讓我們來看 router/index.js 的文件結構，可以看出這個文件主要導出的就是路由的配置項 import Vue from 'vue' import Router from 'vue-router' // HelloWorld 文件所在位置 (@表示在 webpack 中有定義的路徑) import HelloWorld from '@/components/HelloWorld' Vue.use(Router) // 當你訪問根路徑的時候會顯示什麼? 顯示的是 HelloWorld export default new Router({ routes: [ { path: '/', name: 'HelloWorld', component: HelloWorld } ] }) 05. 加載多個頁面資料 如果我們想在一個頁面 include 多個頁面，要怎麼做呢? import Vue from 'vue' import Router from 'vue-router' import HelloWorld from '@/components/HelloWorld' import HelloWorld2 from '@/components/HelloWorld2' // 1. import 新頁面 Vue.use(Router) export default new Router({ routes: [ { path: '/', name: 'HelloWorld', components: { default: HelloWorld, // router 預設顯示 RouterTest: HelloWorld2 // 多個資料設定。前方為 name，後方為 import 的 vue 名稱 } }, { // 原生方法 path: '/RouterTest', name: 'RouterTest', component: HelloWorld2 } ] }) 那麼，在實際組件(App.vue)上要怎麼使用呢? 06. 總結 其實 Vue 的結構的話，與後端對比可以想像成 include，如果更簡單點來說 打開網站後有一個空的大框架，就像powerpoint投影一樣，ppt還是那個ppt但裡面的內容是變換的。 07. Eslint 排錯 在我們進行開發時，偶爾會提示出這種錯誤 Newline required at end of file but not found 原因是因為標籤末尾 不能空兩行 ，所以碰到這種情況，就 將多餘的換行刪了或補上 吧! 事後如果你不想要 Eslint 再提示了，你可以進入 {workspace}\\{project_name}\\config\\index.js 中修改 useEslint:false 即可關閉。 學習地圖對應: 慕克網 > 步骤二：Vue基础+仿去哪网电商实战 > 4.Vue与React高级框架开发 > 项目-首页开发 > 1-4.Vue项目预热-单文件组件与Vue中的路由（1） vue同一个页面可以有多个router-view使用 router-link要怎麼用 vue 学习过程中遇到的一个非常气人的报错 Newline required at end of file but not found HTML 超連結 標籤 (tag) "},"慕課網/01.首頁開發/04.優化程式碼結構/04.優化程式碼結構.html":{"url":"慕課網/01.首頁開發/04.優化程式碼結構/04.優化程式碼結構.html","title":"04.優化程式碼結構","keywords":"","body":"優化程式碼結構 預期結果 components 改 pages 新增首頁 修改路由 如果要增加新頁面呢? 01. 預期結果 將網頁資料都改放入至 pages 目錄，而非 components，並建立 Home 與 List 頁面 02. components 改 pages 步驟一 : 進入 src 目錄，並刪除 components 步驟二 : 在 src 中建立 pages ，用於存放頁面 03. 新增首頁 步驟一 : 進入 src/pages 目錄，並新增 home 資料夾 步驟二 : 在 home 中新增 Home.vue 文件 home export default { name: 'Home' } 04. 修改路由 在路由中添加剛剛新增的 home 頁面 import Vue from 'vue' import Router from 'vue-router' import Home from '@/pages/home/Home' // 1. 添加 home 位置 Vue.use(Router) export default new Router({ routes: [ { path: '/', name: 'Home', component: Home // 2. 顯示 Home 組件 } ] }) 05. 如果要增加新頁面呢? 其實跟新增首頁的方法很相似，首先要再 pages 新增新頁面的目錄，接著在創建 *.vue 檔案，並在 router 添加相應路徑。 接下來的操作我們來一一說明。 步驟一 : 在 pages 下新增 list 資料夾 步驟二 : 在 list 下新增 List.vue 文件 步驟三 : 新增文件內容 list export default { name: 'List' } 步驟四 : 添加 router import Vue from 'vue' import Router from 'vue-router' import Home from '@/pages/home/Home' import List from '@/pages/list/List' Vue.use(Router) // 當前路由的組件會與此物件中的資料做對應 export default new Router({ routes: [ { path: '/', name: 'Home', component: Home }, { path: '/list', name: 'List', component: List } ] }) 學習地圖對應: 慕克網 > 步骤二：Vue基础+仿去哪网电商实战 > 4.Vue与React高级框架开发 > 项目-首页开发 > 1-5.Vue项目预热-单文件组件与Vue中的路由（2） "},"慕課網/01.首頁開發/05.單_多頁面說明與跳轉功能/05.單_多頁面說明與跳轉功能.html":{"url":"慕課網/01.首頁開發/05.單_多頁面說明與跳轉功能/05.單_多頁面說明與跳轉功能.html","title":"05.單_多頁面說明與跳轉功能","keywords":"","body":"單/多頁面說明與跳轉功能 什麼是多頁面應用? 什麼是單頁面應用? 新增跳轉頁面功能 01. 什麼是多頁面應用? 頁面跳轉時會返回 HTML 優點 : 首屏時間快 (就是頁面首次加載時間快)，SEO 效果好 缺點 : 頁面切換慢 因為一開始只請求一個 HTTP，所以速度會很快。 而 SEO 則是因為，HTML 是可以被Google之類的搜索引擎給檢索的。即，正確放入 HTML 語意就能增加被搜索度。所以對於 SEO 效果就更好。 但也因為每次跳轉頁面都要重新發送一個 HTTP 請求，所以網路卡頓時速度就會很慢。 02. 什麼是單頁面應用? 頁面跳轉使用 js 渲染 優點 : 頁面切換快 缺點 : 首屏時間稍慢，SEO差 單頁應用所有功能都是依賴 js 渲染，而搜尋引擎讀取的是 HTML 而非 js，所以SEO優化就會差。但這些在以後都可以使用 服務器端渲染 解決此問題 03. 新增跳轉頁面功能 在 vue 中我們如果要使用到頁面跳轉的功能的話，會使用 router-link 而非 a，那麼在單頁應用的說明中也可以了解 vue 是使用 js 渲染，不會二次請求，這也可以在實作完成時使用 console 查看 home 列表頁 外連至Google export default { name: 'Home' } 學習地圖對應: 慕克網 > 步骤二：Vue基础+仿去哪网电商实战 > 4.Vue与React高级框架开发 > 项目-首页开发 > 1-6.Vue项目预热-单页应用VS多页应用 服务端渲染 [Vue] 連結 - 站內及站外 "},"慕課網/01.首頁開發/06.項目初始化/06.項目初始化.html":{"url":"慕課網/01.首頁開發/06.項目初始化/06.項目初始化.html","title":"06.項目初始化","keywords":"","body":"項目初始化 移動端開發設定 移動端初始化樣式統一 解決移動端 300 毫秒點擊延遲的問題 使用 iconfont 清除不必要的程式碼 01. 移動端開發設定 步驟一 : 開啟 {workspace}\\{project_name}\\index.html 文件 步驟二 : 在 meta 標籤內添加 minimum-scale=1.0,maximum-scale=1.0,user-scalable=no (意思是指 禁止手機手動縮放) my-project 02. 移動端初始化樣式統一 步驟一 : 在 {workspace}\\{project_name}\\src\\assets 下新增 styles 目錄 步驟二 : 在 {workspace}\\{project_name}\\src\\assets\\styles 下新增 reset.css 並輸入以下內容 (reset 也可以自行網上查詢，有很多資源 ; 可以保證在所有網頁上基礎樣式是一致的) @charset \"utf-8\";html{touch-action: manipulation;background-color:#fff;color:#000;font-size:12px} body,ul,ol,dl,dd,h1,h2,h3,h4,h5,h6,figure,form,fieldset,legend,input,textarea,button,p,blockquote,th,td,pre,xmp{margin:0;padding:0} body,input,textarea,button,select,pre,xmp,tt,code,kbd,samp{line-height:1.5;font-family:tahoma,arial,\"Hiragino Sans GB\",simsun,sans-serif} h1,h2,h3,h4,h5,h6,small,big,input,textarea,button,select{font-size:100%} h1,h2,h3,h4,h5,h6{font-family:tahoma,arial,\"Hiragino Sans GB\",\"微软雅黑\",simsun,sans-serif} h1,h2,h3,h4,h5,h6,b,strong{font-weight:normal} address,cite,dfn,em,i,optgroup,var{font-style:normal} table{border-collapse:collapse;border-spacing:0;text-align:left} caption,th{text-align:inherit} ul,ol,menu{list-style:none} fieldset,img{border:0} img,object,input,textarea,button,select{vertical-align:middle} article,aside,footer,header,section,nav,figure,figcaption,hgroup,details,menu{display:block} audio,canvas,video{display:inline-block;*display:inline;*zoom:1} blockquote:before,blockquote:after,q:before,q:after{content:\"\\0020\"} textarea{overflow:auto;resize:vertical} input,textarea,button,select,a{outline:0 none;border: none;} button::-moz-focus-inner,input::-moz-focus-inner{padding:0;border:0} mark{background-color:transparent} a,ins,s,u,del{text-decoration:none} sup,sub{vertical-align:baseline} html {overflow-x: hidden;height: 100%;font-size: 50px;-webkit-tap-highlight-color: transparent;} body {font-family: Arial, \"Microsoft Yahei\", \"Helvetica Neue\", Helvetica, sans-serif;color: #333;font-size: .28em;line-height: 1;-webkit-text-size-adjust: none;} hr {height: .02rem;margin: .1rem 0;border: medium none;border-top: .02rem solid #cacaca;} a {color: #25a4bb;text-decoration: none;} 步驟三 : 在 {workspace}\\{project_name}\\src\\assets\\styles 下新增 border.css 並輸入以下內容 (解決移動端 border 邊框須為 1 的問題) @charset \"utf-8\"; .border, .border-top, .border-right, .border-bottom, .border-left, .border-topbottom, .border-rightleft, .border-topleft, .border-rightbottom, .border-topright, .border-bottomleft { position: relative; } .border::before, .border-top::before, .border-right::before, .border-bottom::before, .border-left::before, .border-topbottom::before, .border-topbottom::after, .border-rightleft::before, .border-rightleft::after, .border-topleft::before, .border-topleft::after, .border-rightbottom::before, .border-rightbottom::after, .border-topright::before, .border-topright::after, .border-bottomleft::before, .border-bottomleft::after { content: \"\\0020\"; overflow: hidden; position: absolute; } /* border * 因，边框是由伪元素区域遮盖在父级 * 故，子级若有交互，需要对子级设置 * 定位 及 z轴 */ .border::before { box-sizing: border-box; top: 0; left: 0; height: 100%; width: 100%; border: 1px solid #eaeaea; transform-origin: 0 0; } .border-top::before, .border-bottom::before, .border-topbottom::before, .border-topbottom::after, .border-topleft::before, .border-rightbottom::after, .border-topright::before, .border-bottomleft::before { left: 0; width: 100%; height: 1px; } .border-right::before, .border-left::before, .border-rightleft::before, .border-rightleft::after, .border-topleft::after, .border-rightbottom::before, .border-topright::after, .border-bottomleft::after { top: 0; width: 1px; height: 100%; } .border-top::before, .border-topbottom::before, .border-topleft::before, .border-topright::before { border-top: 1px solid #eaeaea; transform-origin: 0 0; } .border-right::before, .border-rightbottom::before, .border-rightleft::before, .border-topright::after { border-right: 1px solid #eaeaea; transform-origin: 100% 0; } .border-bottom::before, .border-topbottom::after, .border-rightbottom::after, .border-bottomleft::before { border-bottom: 1px solid #eaeaea; transform-origin: 0 100%; } .border-left::before, .border-topleft::after, .border-rightleft::after, .border-bottomleft::after { border-left: 1px solid #eaeaea; transform-origin: 0 0; } .border-top::before, .border-topbottom::before, .border-topleft::before, .border-topright::before { top: 0; } .border-right::before, .border-rightleft::after, .border-rightbottom::before, .border-topright::after { right: 0; } .border-bottom::before, .border-topbottom::after, .border-rightbottom::after, .border-bottomleft::after { bottom: 0; } .border-left::before, .border-rightleft::before, .border-topleft::after, .border-bottomleft::before { left: 0; } @media (max--moz-device-pixel-ratio: 1.49), (-webkit-max-device-pixel-ratio: 1.49), (max-device-pixel-ratio: 1.49), (max-resolution: 143dpi), (max-resolution: 1.49dppx) { /* 默认值，无需重置 */ } @media (min--moz-device-pixel-ratio: 1.5) and (max--moz-device-pixel-ratio: 2.49), (-webkit-min-device-pixel-ratio: 1.5) and (-webkit-max-device-pixel-ratio: 2.49), (min-device-pixel-ratio: 1.5) and (max-device-pixel-ratio: 2.49), (min-resolution: 144dpi) and (max-resolution: 239dpi), (min-resolution: 1.5dppx) and (max-resolution: 2.49dppx) { .border::before { width: 200%; height: 200%; transform: scale(.5); } .border-top::before, .border-bottom::before, .border-topbottom::before, .border-topbottom::after, .border-topleft::before, .border-rightbottom::after, .border-topright::before, .border-bottomleft::before { transform: scaleY(.5); } .border-right::before, .border-left::before, .border-rightleft::before, .border-rightleft::after, .border-topleft::after, .border-rightbottom::before, .border-topright::after, .border-bottomleft::after { transform: scaleX(.5); } } @media (min--moz-device-pixel-ratio: 2.5), (-webkit-min-device-pixel-ratio: 2.5), (min-device-pixel-ratio: 2.5), (min-resolution: 240dpi), (min-resolution: 2.5dppx) { .border::before { width: 300%; height: 300%; transform: scale(.33333); } .border-top::before, .border-bottom::before, .border-topbottom::before, .border-topbottom::after, .border-topleft::before, .border-rightbottom::after, .border-topright::before, .border-bottomleft::before { transform: scaleY(.33333); } .border-right::before, .border-left::before, .border-rightleft::before, .border-rightleft::after, .border-topleft::after, .border-rightbottom::before, .border-topright::after, .border-bottomleft::after { transform: scaleX(.33333); } } 步驟四 : 在 {workspace}\\{project_name}\\vue1\\src\\main.js 中引用 reset.css、border.css 文件 import Vue from 'vue' import App from './App' import router from './router' import './assets/styles/reset.css' // 使用 import 方式添加 import './assets/styles/border.css' // 使用 import 方式添加 Vue.config.productionTip = false new Vue({ el: '#app', router, components: { App }, template: '' }) 03. 解決移動端 300 毫秒點擊延遲的問題 在某些機型或是某些移動端瀏覽器中，點擊 click 的事件會在 300 毫秒之後才執行，這樣 click 事件的感受就不好了，所以需要解決此問題。如果要解決這個問題的話，我們可以引入 fastClick 庫。 步驟一 : 執行 npm i fastclick --save 表示將 fastclick 安裝到項目依賴中 (--save 表示在開發環境或打包生成線上環境用的程式碼都要用) 步驟二 : 在 {workspace}\\{project_name}\\vue1\\src\\main.js 中引入 fastClick 庫 import Vue from 'vue' import App from './App' import router from './router' import fastClick from 'fastclick' // 1. 引入 fastClick 庫 import './assets/styles/reset.css' import './assets/styles/border.css' Vue.config.productionTip = false fastClick.attach(document.body) // 2. 將作用綁定在 document.body 上 new Vue({ el: '#app', router, components: { App }, template: '' }) 04. 使用 iconfont 這是中國常用的 icon 網站 阿里巴巴矢量图标库 ，但我們一般在開發中都是使用 UI/UX 給的，所以在此部分主要是學習怎麼引入其他 icon 文字。使用方法暫不說明 (因註冊要使用中國手機號) 05. 清除不必要的程式碼 步驟一 : 清除 {workspace}\\{project_name}\\src\\router\\index.js 中不必要的程式碼，成以下結果 import Vue from 'vue' import Router from 'vue-router' import Home from '@/pages/home/Home' Vue.use(Router) export default new Router({ routes: [ { path: '/', name: 'Home', component: Home } ] }) 步驟二 : 刪除 {workspace}\\{project_name}\\src\\pages\\list 及以下組件 步驟三 : 修改 {workspace}\\{project_name}\\src\\pages\\home\\Home.vue 內容如下 hello world! export default { name: 'Home' } 步驟四 : 修改 {workspace}\\{project_name}\\src\\App.vue 內容如下，清除的步驟到此結束 export default { name: 'App' } 學習地圖對應: 慕克網 > 步骤二：Vue基础+仿去哪网电商实战 > 4.Vue与React高级框架开发 > 项目-首页开发 > 1-9.Vue项目预热-项目代码初始化 fastclick 的安装 "},"慕課網/01.首頁開發/07.Header區域開發/07.Header區域開發.html":{"url":"慕課網/01.首頁開發/07.Header區域開發/07.Header區域開發.html","title":"07.Header區域開發","keywords":"","body":"Header 區域開發 今日預完成畫面 安裝 stylus 頁面組件化 01. 今日預完成畫面 這次準備完成 header 的功能 02. 安裝 stylus stylus 是一個前端樣式預處理工具，就像 sass 也是種前端預處裡工具一樣 步驟一 : 執行 npm i stylus@0.56.0 --save 步驟二 : 執行 npm install stylus-loader@3.0.2 步驟三 : 執行 npm run start 重啟項目 03. 頁面組件化 頁面組件化 : 將複雜的頁面拆分成部分的內容，即將一個大組件變成容器組件，再引入各個小的組件整合成一個完整組件 步驟一 : {workspace}\\{project_name}\\src\\pages\\home 下新增 components 目錄 步驟二 : 在 components 下新增 Header.vue 並輸入以下內容 Header export default { name: 'HomeHeader' } 步驟三 : 添加 header 這個局部組件 import HomeHeader from './components/Header' // 1. 在這import export default { name: 'Home', components: { HomeHeader // 2. 添加要使用的局部組件 } } 步驟四 : 組件樣式在該組件使用(scoped)，並套用 stylus 步驟五 : 構建 header 樣式與結構 返回 輸入城市/景點/遊玩主题 城市 export default { name: 'HomeHeader' } .header display: flex line-height: .86rem background: #00bcd4 color: #fff .header-left width: .64rem float: left .back-icon text-align: center font-size: .4rem .header-input flex: 1 height: .64rem line-height: .64rem margin-top: .12rem margin-left: .2rem padding-left: .2rem background: #fff border-radius: .1rem color: #ccc .header-right width: 1.24rem float: right text-align: center .arrow-icon margin-left: -.04rem font-size: .24rem 步驟六 : 在 {workspace}\\{project_name}\\src\\assets\\styles 創建 variables.styl 將 line-height 參數移至文件中 $bgColor = #00bcd4 $darkTextColor = #333 $headerHeight = .86rem 最終 : 修改 header 的 style，將一些固定樣式替換成參數，此步驟做完後 Header 基本架構就建立完畢 返回 輸入城市/景點/遊玩主题 城市 export default { name: 'HomeHeader' } /* 樣式包引入用以下兩方法都可以 @import '~@/assets/styles/variables.styl' 或 @import '../../../assets/styles/variables.styl' */ @import '~@/assets/styles/variables.styl' .header display: flex line-height: $headerHeight background: $bgColor color: #fff .header-left width: .64rem float: left .back-icon text-align: center font-size: .4rem .header-input flex: 1 height: .64rem line-height: .64rem margin-top: .12rem margin-left: .2rem padding-left: .2rem background: #fff border-radius: .1rem color: #ccc .header-right width: 1.24rem float: right text-align: center .arrow-icon margin-left: -.04rem font-size: .24rem 學習地圖對應: 慕克網 > 步骤二：Vue基础+仿去哪网电商实战 > 4.Vue与React高级框架开发 > 项目-首页开发 > 2-1.Vue项目首页-header区域开发 Rem : 相對於根元素的字體大小的單位，一般根元素字體大小會設置在 html 這個根節點，對於統一調整比例很好用 Rem 算法 : 愈換算的文字大小(px)/根節點文字大小(px) = REM 如果我們要換算 43px 的文字是多少 rem 則用的公式是 43/50 = 0.86，即 43px = 0.86rem ( 因為在 rest.css 中有設定 html {overflow-x: hidden;height: 100%;font-size: 50px;-webkit-tap-highlight-color: transparent;}，所以可以看見根節點文字大小是 50px ) TypeError: this.getOptions is not a function (安装stylus) 关于stylus版本和style语法高亮问题解决 引入@import ~@ ~是语法规定吗 CSS中的rem：了解和使用rem单位 "},"慕課網/01.首頁開發/08.引入自定義樣式/08.引入自定義樣式.html":{"url":"慕課網/01.首頁開發/08.引入自定義樣式/08.引入自定義樣式.html","title":"08.引入自定義樣式","keywords":"","body":"引入自定義樣式 引入自定義樣式 01. 引入自定義樣式 iconfont 為 阿里巴巴矢量图标库 提供的免費樣式庫，但需要用中國手機註冊 步驟一 : 下載 iconfont 樣式 步驟二 : 修改 {workspace}\\{project_name}\\vue1\\src\\assets\\styles\\iconfont.css 中的 url ，以匹配目前項目路徑 (直接用步驟一的下載檔就不用) 步驟三 : 在 {workspace}\\{project_name}\\vue1\\src\\main.js 引入 iconfont.css // The Vue build version to load with the `import` command // (runtime-only or standalone) has been set in webpack.base.conf with an alias. import Vue from 'vue' import App from './App' import router from './router' import fastClick from 'fastclick' import './assets/styles/reset.css' import './assets/styles/border.css' import './assets/styles/iconfont.css' // 因為所有頁面都要使用，故在這引入 iconfont Vue.config.productionTip = false fastClick.attach(document.body) /* eslint-disable no-new */ new Vue({ el: '#app', router, components: { App }, template: '' }) 步驟四 : 添加 {workspace}\\{project_name}\\vue1\\src\\pages\\home\\components\\Header.vue 中的 icon 圖標 &#xe624; &#xe632; 輸入城市/景點/遊玩主题 城市 &#xe64a; export default { name: 'HomeHeader' } @import '~@/assets/styles/variables.styl' .header display: flex line-height: $headerHeight background: $bgColor color: #fff .header-left width: .64rem float: left .back-icon text-align: center font-size: .4rem .header-input flex: 1 height: .64rem line-height: .64rem margin-top: .12rem margin-left: .2rem padding-left: .2rem background: #fff border-radius: .1rem color: #ccc .header-right width: 1.24rem float: right text-align: center .arrow-icon margin-left: -.04rem font-size: .24rem 02. 自訂 alias alias 為 NodesJS 中的別名，這樣可以用自訂名稱代替長路徑 步驟一 : 位置 {workspace}\\{project_name}\\build\\webpack.base.conf.js resolve: { extensions: ['.js', '.vue', '.json'], alias: { 'vue$': 'vue/dist/vue.esm.js', '@': resolve('src'), // 預設別名 'styles': resolve('src/assets/styles'), // 自訂別名方法 } }, 步驟二 : 實際可以調整成 ~styles/variables.styl @import '~styles/variables.styl' 學習地圖對應: 慕克網 > 步骤二：Vue基础+仿去哪网电商实战 > 4.Vue与React高级框架开发 > 项目-首页开发 > 2-3.Vue项目首页-iconfont的使用和代码优化 Java中为类起别名 "},"慕課網/01.首頁開發/09.首頁輪播圖/09.首頁輪播圖.html":{"url":"慕課網/01.首頁開發/09.首頁輪播圖/09.首頁輪播圖.html","title":"09.首頁輪播圖","keywords":"","body":"首頁輪播圖 vue-awesome-swiper 引入 swiper 的使用 調用 swiper 下的頁簽點 修改 swiper 組件的樣式 使 swiper 用參數設定的方式輸出 新增 swiper 輪播功能 01. vue-awesome-swiper 引入 步驟一 : 在 git 查詢 vue-awesome-swiper，在此我們使用 v2.6.7 版本 步驟二 : 執行 npm install vue-awesome-swiper@2.6.7 --save (@2.6.7 表示指定安裝版本) 步驟三 : 如果發生以下錯誤提示，可以忽略 (npm run dev 可執行成功就可以) found 28 vulnerabilities (16 moderate, 11 high, 1 critical) run `npm audit fix` to fix them, or `npm audit` for details 步驟四 : 在 vue 中引入 swiper (就是在 main.js 引入 swiper) 在官方文件中可以看見是使用 require('swiper/dist/css/swiper.css') 方法引入的，但在這我們直接用 import 'swiper/dist/css/swiper.css' 就好 // The Vue build version to load with the `import` command // (runtime-only or standalone) has been set in webpack.base.conf with an alias. import Vue from 'vue' import App from './App' import router from './router' import fastClick from 'fastclick' import VueAwesomeSwiper from 'vue-awesome-swiper' // 1. 引入 swiper 插件 import './assets/styles/reset.css' import './assets/styles/border.css' import './assets/styles/iconfont.css' import 'swiper/dist/css/swiper.css' // 2. 引入 swiper 的 css Vue.config.productionTip = false fastClick.attach(document.body) Vue.use(VueAwesomeSwiper) // 3. 使用 swipper /* eslint-disable no-new */ new Vue({ el: '#app', router, components: { App }, template: '' }) 02. swiper 的使用 步驟一 : 進入 {workspace}\\{project_name}\\src\\pages\\home\\components 創建子組件 Swiper.vue I'm Slide 1 I'm Slide 2 I'm Slide 3 I'm Slide 4 I'm Slide 5 I'm Slide 6 I'm Slide 7 export default { name: 'HomeSwiper', data() { return { swiperOption: {} // 2. 添加 swiper 資料，目前預設為空 } } } 步驟二 : 將 Swiper 組件添加入 Home.vue 中 import HomeHeader from './components/Header' import HomeSwiper from './components/Swiper' // 1. 引入 Swiper 組件 export default { name: 'Home', components: { HomeHeader, HomeSwiper // 2. 註冊組件 } } 步驟三 : 試著執行看結果 步驟四 : 去除多餘 swiper 功能 (左/右箭頭、滾軸) 輪播: 左箭頭 --> 輪播: 右箭頭 --> 輪播: 下方滾軸 --> export default { name: 'HomeSwiper', data () { return { swiperOption: {} // 2. 添加 swiper 資料，目前預設為空 } } } 步驟五 : 設定預設圖片寬度 100% export default { name: 'HomeSwiper', data () { return { swiperOption: {} } } } .swiper-img width: 100% 步驟六 : 設定 swipper 預設高度 export default { name: 'HomeSwiper', data () { return { swiperOption: {} } } } .wrapper // 2. 設定 wrapper overflow hidden width:100% height:0 padding-bottom:25.3% // 3. 給預設高度 background:#eee .swiper-img width: 100% 其中主要添加的參數是，這樣可使 swipper 有預設空間，使加載資料完成前不會有位移抖動 .wrapper overflow hidden width:100% height:0 padding-bottom:25.3% background:#eee // 設定淺灰色背景 步驟七 : 開啟 DevTool ( F12 > 效能 > 網路 : 3G ) 做效能檢測，畫面可正常呈現 ( 預設網路是 不進行節流 ) 03. 調用 swiper 下的頁簽點 步驟一 : 新增 swiperOption 中參數以掛載分頁器 export default { name: 'HomeSwiper', data () { return { swiperOption: { pagination: '.swiper-pagination' // 2. 分頁器掛載 } } } } .wrapper overflow hidden width:100% height:0 padding-bottom:25.3% background:#eee .swiper-img width: 100% 步驟二 : 實作後畫面，出現預設藍點 04. 修改 swiper 組件的樣式 在這我們要延伸 03. 調用 swiper 下的頁簽點 的功能來繼續自訂樣式 步驟一 : 調整樣式，因為 scoped 表示在此組件內修改，所以一定要用 >>> 的方式穿透才可調整到子組件 (即 swiper) // >>> 表示穿透，即 .wrapper 下所有子組件只要出現 .swiper-pagination-bullet-active 的劃一律調整 .wrapper >>> .swiper-pagination-bullet-active background: #fff !important .wrapper overflow hidden width:100% height:0 padding-bottom:25.3% background:#eee .swiper-img width: 100% 步驟二 : 實作後畫面，可以看見顏色已改為白色 05. 使 swiper 用參數設定的方式輸出 步驟一 : 添加 swiperOption 參數，並在 swiper-slide 中加入 v-for，需注意的是現在 v-for 寫法後應添加 :key\" 來避免重複產生 DOM 元素而造成資源浪費，且 key 屬性應是 唯一，起到身分認證的作用 (為了讓 vue 可以跟蹤每個節點的身分，所以我們 必須 提供唯一 key) export default { name: 'HomeSwiper', data () { return { swiperOption: { pagination: '.swiper-pagination' }, // 1. 因為 Vue 是數據驅動，所以要調整的話只要調整頁面只要用數組完成就可以，所以我們可以將圖片位置與 id 在此設置 (swiperList 名稱可自訂) swiperList: [{ id: '0001', imgUrl: 'https://img.zcool.cn/community/016d6560af0e1311013eaf705fcddf.jpg@1380w' }, { id: '0002', imgUrl: 'https://img.zcool.cn/community/01486f60b04f5611013eaf70f5ed8a.jpg@1380w' }] } } } // 3. >>> 表示穿透，即 .wrapper 下所有子組件只要出現 .swiper-pagination-bullet-active 的劃一律調整 .wrapper >>> .swiper-pagination-bullet-active background: #fff !important .wrapper overflow hidden width:100% height:0 padding-bottom:25.3% background:#eee .swiper-img width: 100% 步驟二 : 實作後畫面，可以看見實際結果跟 04. 修改 swiper 組件的樣式 的相同 06. 新增 swiper 輪播功能 步驟一 : 在 swiperOption 中添加 loop 並設定為 true 即可 export default { name: 'HomeSwiper', data () { return { swiperOption: { pagination: '.swiper-pagination', loop: true // 添加此參數使 swiper 可以輪播 }, swiperList: [{ id: '0001', imgUrl: 'https://img.zcool.cn/community/016d6560af0e1311013eaf705fcddf.jpg@1380w' }, { id: '0002', imgUrl: 'https://img.zcool.cn/community/01486f60b04f5611013eaf70f5ed8a.jpg@1380w' }] } } } .wrapper >>> .swiper-pagination-bullet-active background: #fff !important .wrapper overflow hidden width:100% height:0 padding-bottom:25.3% background:#eee .swiper-img width: 100% 學習地圖對應: 慕克網 > 步骤二：Vue基础+仿去哪网电商实战 > 4.Vue与React高级框架开发 > 项目-首页开发 > 2-5.Vue项目首页-首页轮播图 import : ES6出現，實現 非同步載入，相當於後端當中的 執行續 require() : 為 同步載入，會由上到下依序載入 (由 Node.js 中的 CommonJS 提供) swipper : 相當於 Banner，在移動端則是常用於左右頁面切換與 Banner 特效等等，也可上下翻轉 JavaScript 中 require, import 的差別及效能 [7-2] 實現AMD的require.js 與 ES6 Import/Export 大比拚 require(id) CommonJS规范 Stylus 支持三种注释方式：单行注释、多行注释和多行缓冲注释。 JSTL 與 Scriptlet v-for中key属性的作用 /deep/ 是什麼？ — 聊聊 Vue 裡的 scoped css Vue style 深度作用选择器 >>> 与 /deep/（sass/less） "},"慕課網/01.首頁開發/10.圖標區域布局/10.圖標區域布局.html":{"url":"慕課網/01.首頁開發/10.圖標區域布局/10.圖標區域布局.html","title":"10.圖標區域布局","keywords":"","body":"圖標區域布局 此次預完成功能 新增 Icons.vue 組件並設定樣式 01. 此次預完成功能 此節課主要是完成圖標區域的頁面布局 02. 新增 Icons.vue 組件並設定樣式 步驟一 : 在 {workspace}\\{project_name}\\src\\pages\\home\\components 下新增 Icons.vue 步驟二 : 賦予 Icons.vue 文件初始內容 icons export default { name: 'HomeIcons' } 步驟三 : 在 {workspace}\\{project_name}\\src\\pages\\home\\Home.vue 新增 Icons 組件 import HomeHeader from './components/Header' import HomeSwiper from './components/Swiper' import HomeIcons from './components/Icons' // 1. 引入 Icons 組件 export default { name: 'Home', components: { HomeHeader, HomeSwiper, HomeIcons // 2. 註冊 Icons 組件 } } 步驟四 : 賦予 Icons.vue 組件預設高度 export default { name: 'HomeIcons' } .icons // 1. 撐起區域預設高度 width 100% overflow: hidden height: 0 padding-bottom: 50% // 2. 依照寬度比撐高50% background: green .icon // 3. 子區域撐高25% float left width 25% padding-bottom 25% background-color red 步驟五 : 添加 {workspace}\\{project_name}\\src\\assets\\styles\\variables.styl 參數 $darkTextColor = #333 步驟五 : 補足頁面標籤與樣式 熱門景點 export default { name: 'HomeIcons' } @import '~styles/variables.styl' .icons width 100% overflow: hidden height: 0 padding-bottom: 50% .icon // 1. icon固定寬高比例 position: relative float left width 25% padding-bottom 25% overflow hidden height 0 .icon-img // 2. 圖片居中 position: absolute top 0 left 0 right 0 bottom: .44rem box-sizing: border-box padding: .1rem .icon-img-content // 3. 圖片大小符合區域大小 display block height 100% margin: 0 auto .icon-desc // 4. 文字居中 position: absolute left 0 right 0 bottom: 0 height .44rem line-height: .44rem color: $darkTextColor // 5. 參數來自 variables.styl text-align: center 步驟六 : 畫面預覽 學習地圖對應: 慕克網 > 步骤二：Vue基础+仿去哪网电商实战 > 4.Vue与React高级框架开发 > 项目-首页开发 > 2-7.Vue项目首页-图标区域页面布局 export default : 預設匯出，一個檔案只能一個 (類似後端的 public class，區別在於一個檔案只能一個 export default) 完全解析 JavaScript import、export export default 为何突然没用了？ Vue: export default中的name属性到底有啥作用呢？ export default {} 和new Vue()区别 "},"慕課網/01.首頁開發/11.圖標區域邏輯實現/11.圖標區域邏輯實現.html":{"url":"慕課網/01.首頁開發/11.圖標區域邏輯實現/11.圖標區域邏輯實現.html","title":"11.圖標區域邏輯實現","keywords":"","body":"圖標區域邏輯實現 此次預完成功能 新增 Icons.vue 組件並設定樣式 頁面數據參數化 優化頁面效果 vuejs-devtools 工具介紹 01. 此次預完成功能 將頁面圖標區域邏輯實現，並且在頁面出現 8 個圖標以上時可以左右拖動 02. 添加分頁效果 步驟一 : 添加 swiper 與 swiper-slide 來包裹住 icon 標籤，此作用主要是添加 swiper 滑動效果 步驟二 : 添加樣式撐高 swiper 的預設高度 .icons >>> .swiper-container height: 0 padding-bottom: 50% 步驟三 : 完整效果 熱門景點 熱門景點 export default { name: 'HomeIcons' } @import '~styles/variables.styl' .icons >>> .swiper-container height: 0 padding-bottom: 50% .icon position: relative float left width 25% padding-bottom 25% overflow hidden height 0 .icon-img position: absolute top 0 left 0 right 0 bottom: .44rem box-sizing: border-box padding: .1rem .icon-img-content display block height 100% margin: 0 auto .icon-desc position: absolute left 0 right 0 bottom: 0 height .44rem line-height: .44rem color: $darkTextColor text-align: center 03. 頁面數據參數化 步驟一 : 新增 iconList 的參數，並關閉 swiper 的自動播放 export default { name: 'HomeIcons', data () { return { swiperOption: { autoplay: false }, iconList: [{ id: '0001', imgUrl: 'https://mp-piao-admincp.qunarzz.com/mp_piao_admin_mp_piao_admin/admin/20209/36d99efa6f2aa91f1ec9d18ce57fd5e3.png', desc: '酒店套餐' }, { id: '0002', imgUrl: 'https://mp-piao-admincp.qunarzz.com/mp_piao_admin_mp_piao_admin/admin/20209/a9d33792bd961b1692638d86cf3e6b83.png', desc: '滑雪' }, { id: '0003', imgUrl: 'https://mp-piao-admincp.qunarzz.com/mp_piao_admin_mp_piao_admin/admin/20209/557ba25df01d7dbf1419b095a11d1319.png', desc: '溫泉' }, { id: '0004', imgUrl: 'https://mp-piao-admincp.qunarzz.com/mp_piao_admin_mp_piao_admin/admin/20209/d706a4d71c57c53ee8863b75a7af30cf.png', desc: '名勝古蹟' }, { id: '0005', imgUrl: 'https://mp-piao-admincp.qunarzz.com/mp_piao_admin_mp_piao_admin/admin/20209/c4c5c620f20535ff358788a508c20921.png', desc: '主題樂園' }, { id: '0006', imgUrl: 'https://mp-piao-admincp.qunarzz.com/mp_piao_admin_mp_piao_admin/admin/20209/ace59857fe268552aa556189953aa369.png', desc: '自然風光' }, { id: '0007', imgUrl: 'https://mp-piao-admincp.qunarzz.com/mp_piao_admin_mp_piao_admin/admin/20209/aba25fb84648c130561afa5398d3552a.png', desc: '動植物園' }, { id: '0008', imgUrl: 'https://mp-piao-admincp.qunarzz.com/mp_piao_admin_mp_piao_admin/admin/20209/1fe870f93ec9bf5e30c4305acdca1822.png', desc: '品牌館' }, { id: '0009', imgUrl: 'https://mp-piao-admincp.qunarzz.com/mp_piao_admin_mp_piao_admin/admin/20209/d706a4d71c57c53ee8863b75a7af30cf.png', desc: '故宮' }] } } } 步驟二 : 修改 template，從固定資料變循環 {{item.desc}} 步驟三 : 添加計算屬性(computed)，新增分頁功能 export default { name: 'HomeIcons', data () { // ... }, // 1. 計算屬性: 根據其他屬性計算出來生成一組新的結果，自帶緩存且語法簡單 computed: { pages () { const pages = [] // 2. 對 iconList 做循環 this.iconList.forEach((item, index) => { // 3. 頁碼計算，算整除後的結果 const page = Math.floor(index / 8) // 4. 判斷 pages[0]、pages[1]...是否有值，沒值就初始化為空陣列/數組 if (!pages[page]) { pages[page] = [] } // 5. 添加數組內容 (push只能用在陣列，所以需在步驟4初始化) pages[page].push(item) }) return pages } } } 步驟四 : 在標籤上添加分頁效果 {{item.desc}} 步驟五 : 可看見已有分頁效果，且在頁面上也可切換 04. 優化頁面效果 讓標題字過長時會出現...效果 步驟一 : 在 {workspace}\\{project_name}\\src\\assets\\styles 中新增 mixins.styl 文件，並放入以下內容，作用就是將...寫成前端方法，使這方法可以多地方套用 ellipsis() overflow: hidden white-space: nowrap text-overflow: ellipsis 步驟二 : 在 {workspace}\\{project_name}\\src\\pages\\home\\components\\Icons.vue 中引入樣式 @import '~styles/variables.styl' @import '~styles/mixins.styl' // 1. 引入 mixins.styl .icons >>> .swiper-container height: 0 padding-bottom: 50% .icons margin-top: .1rem .icon position: relative float left width 25% padding-bottom 25% overflow hidden height 0 .icon-img position: absolute top 0 left 0 right 0 bottom: .44rem box-sizing: border-box padding: .1rem .icon-img-content display block height 100% margin: 0 auto .icon-desc position: absolute left 0 right 0 bottom: 0 height .44rem line-height: .44rem color: $darkTextColor text-align: center ellipsis() // 2. 添加剛剛創建的 css 函式 最終 : {workspace}\\{project_name}\\src\\pages\\home\\components\\Icons.vue 的完整程式碼 {{item.desc}} export default { name: 'HomeIcons', data () { return { iconList: [{ id: '0001', imgUrl: 'https://mp-piao-admincp.qunarzz.com/mp_piao_admin_mp_piao_admin/admin/20209/36d99efa6f2aa91f1ec9d18ce57fd5e3.png', desc: '酒店套餐' }, { id: '0002', imgUrl: 'https://mp-piao-admincp.qunarzz.com/mp_piao_admin_mp_piao_admin/admin/20209/a9d33792bd961b1692638d86cf3e6b83.png', desc: '滑雪' }, { id: '0003', imgUrl: 'https://mp-piao-admincp.qunarzz.com/mp_piao_admin_mp_piao_admin/admin/20209/557ba25df01d7dbf1419b095a11d1319.png', desc: '溫泉' }, { id: '0004', imgUrl: 'https://mp-piao-admincp.qunarzz.com/mp_piao_admin_mp_piao_admin/admin/20209/d706a4d71c57c53ee8863b75a7af30cf.png', desc: '名勝古蹟' }, { id: '0005', imgUrl: 'https://mp-piao-admincp.qunarzz.com/mp_piao_admin_mp_piao_admin/admin/20209/c4c5c620f20535ff358788a508c20921.png', desc: '主題樂園' }, { id: '0006', imgUrl: 'https://mp-piao-admincp.qunarzz.com/mp_piao_admin_mp_piao_admin/admin/20209/ace59857fe268552aa556189953aa369.png', desc: '自然風光' }, { id: '0007', imgUrl: 'https://mp-piao-admincp.qunarzz.com/mp_piao_admin_mp_piao_admin/admin/20209/aba25fb84648c130561afa5398d3552a.png', desc: '動植物園' }, { id: '0008', imgUrl: 'https://mp-piao-admincp.qunarzz.com/mp_piao_admin_mp_piao_admin/admin/20209/1fe870f93ec9bf5e30c4305acdca1822.png', desc: '品牌館' }, { id: '0009', imgUrl: 'https://mp-piao-admincp.qunarzz.com/mp_piao_admin_mp_piao_admin/admin/20209/d706a4d71c57c53ee8863b75a7af30cf.png', desc: '故宮' }] } }, computed: { pages () { const pages = [] this.iconList.forEach((item, index) => { const page = Math.floor(index / 8) if (!pages[page]) { pages[page] = [] } pages[page].push(item) }) return pages } } } @import '~styles/variables.styl' @import '~styles/mixins.styl' .icons >>> .swiper-container height: 0 padding-bottom: 50% .icons margin-top: .1rem .icon position: relative float left width 25% padding-bottom 25% overflow hidden height 0 .icon-img position: absolute top 0 left 0 right 0 bottom: .44rem box-sizing: border-box padding: .1rem .icon-img-content display block height 100% margin: 0 auto .icon-desc position: absolute left 0 right 0 bottom: 0 height .44rem line-height: .44rem color: $darkTextColor text-align: center ellipsis() 05. vuejs-devtools 工具介紹 使用此工具可以更方便的檢查 Vue 步驟一 : 在 Chrome 安裝 vuejs-devtools 檢查工具 步驟二 : 在 chrome 開啟控制台，並且點擊 Vue 標籤，在點選組件時可以看見其中的數據 學習地圖對應: 慕克網 > 步骤二：Vue基础+仿去哪网电商实战 > 4.Vue与React高级框架开发 > 项目-首页开发 > 2-8.Vue项目首页-图标区域逻辑实现 computed 與 method 差異 差異一 : computed 有緩存效果 差異二 : computed 在頁面上是 {{msg}} 而 method 是 msg() Vue.js 计算属性 computed [Vue] 還是不懂 Computed ？ "},"慕課網/01.首頁開發/12.熱銷推薦組件開發/12.熱銷推薦組件開發.html":{"url":"慕課網/01.首頁開發/12.熱銷推薦組件開發/12.熱銷推薦組件開發.html","title":"12.熱銷推薦組件開發","keywords":"","body":"熱銷推薦組件開發 此次預完成功能 初始功能創建 組件內容開發 01. 此次預完成功能 完成熱銷推薦區域 02. 初始功能創建 步驟一 : 在 {workspace}\\{project_name}\\src\\pages\\home\\components 創建 Recommend.vue 步驟二 : 新增 Recommend.vue 組件內容 熱銷推薦 export default { name: 'HomeRecommend' } 步驟三 : 在主要組件 {workspace}\\{project_name}\\src\\pages\\home\\Home.vue 中註冊此組件 import HomeHeader from './components/Header' import HomeSwiper from './components/Swiper' import HomeIcons from './components/Icons' import HomeRecommend from './components/Recommend' // 1. 引入組件 export default { name: 'Home', components: { HomeHeader, HomeSwiper, HomeIcons, HomeRecommend // 2. 註冊組件 } } 03. 組件內容開發 步驟一 : 建立組件 {workspace}\\{project_name}\\src\\pages\\home\\components\\Recommend.vue 的標題樣式 熱銷推薦 export default { name: 'HomeRecommend' } // 2. 撰寫標題樣式 .title line-height: .8rem // 3. 行高 background: #eee // 4. 背景色 text-indent: .2rem // 5. 首字縮排 margin-top: .2rem // 6. 上方間距 步驟二 : 新增樣板標籤，同時放上圖與內容 熱銷推薦 北京環球度假區 北京環球度假區旅遊景點推薦 查看詳情 步驟三 : 修改 css 樣式 (基本上樣式調整通常都會由上而下的對逐個層級的標籤進行) .title margin-top: .2rem line-height: .8rem background: #eee text-indent: .2rem .item overflow: hidden display: flex height: 1.9rem .item-img width: 1.7rem height: 1.7rem padding: .1rem .item-info flex: 1 padding: .1rem min-width: 0 .item-title line-height: .54rem font-size: .32rem .item-desc line-height: .4rem color: #ccc .item-button line-height: .44rem margin-top: .16rem background: #ff9300 padding: 0 .2rem border-radius: .06rem color: #fff 步驟四 : 在 item 這 class 中添加 border-bottom ，將每個 item 與下方增加 1px 分隔線 (因為我們有掛載 border.css 所以可以直接用) 熱銷推薦 北京環球度假區 北京環球度假區旅遊景點推薦 查看詳情 步驟五 : 添加文字溢出處裡 ellipsis() @import '~styles/mixins.styl' // 1. 引入 mixins .title margin-top: .2rem line-height: .8rem background: #eee text-indent: .2rem .item overflow: hidden display: flex height: 1.9rem .item-img width: 1.7rem height: 1.7rem padding: .1rem .item-info flex: 1 padding: .1rem min-width: 0 .item-title line-height: .54rem font-size: .32rem ellipsis() // 2. 使用已創建的文字溢出方法 .item-desc line-height: .4rem color: #ccc ellipsis() .item-button line-height: .44rem margin-top: .16rem background: #ff9300 padding: 0 .2rem border-radius: .06rem color: #fff 步驟六 : 將資料用數組方式循環 熱銷推薦 {{item.title}} {{item.desc}} {{item.button}} export default { name: 'HomeRecommend', // 1. 添加 data data () { return { recommendList: [{ id: '0001', imgUrl: 'https://imgs.qunarzz.com/sight/p0/2109/20/204e37770f73cd73a3.water.jpg_200x200_4af12284.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦', button: '查看詳情' }, { id: '0002', imgUrl: 'https://imgs.qunarzz.com/sight/p0/2109/20/204e37770f73cd73a3.water.jpg_200x200_4af12284.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦', button: '查看詳情' }, { id: '0003', imgUrl: 'https://imgs.qunarzz.com/sight/p0/2109/20/204e37770f73cd73a3.water.jpg_200x200_4af12284.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦', button: '查看詳情' }] } } } 最終 : {workspace}\\{project_name}\\src\\pages\\home\\components\\Recommend.vue 完整版樣式 熱銷推薦 {{item.title}} {{item.desc}} {{item.button}} export default { name: 'HomeRecommend', data () { return { recommendList: [{ id: '0001', imgUrl: 'https://imgs.qunarzz.com/sight/p0/2109/20/204e37770f73cd73a3.water.jpg_200x200_4af12284.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦', button: '查看詳情' }, { id: '0002', imgUrl: 'https://imgs.qunarzz.com/sight/p0/2109/20/204e37770f73cd73a3.water.jpg_200x200_4af12284.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦', button: '查看詳情' }, { id: '0003', imgUrl: 'https://imgs.qunarzz.com/sight/p0/2109/20/204e37770f73cd73a3.water.jpg_200x200_4af12284.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦', button: '查看詳情' }] } } } @import '~styles/mixins.styl' .title margin-top: .2rem line-height: .8rem background: #eee text-indent: .2rem .item overflow: hidden display: flex height: 1.9rem .item-img width: 1.7rem height: 1.7rem padding: .1rem .item-info flex: 1 padding: .1rem min-width: 0 .item-title line-height: .54rem font-size: .32rem ellipsis() .item-desc line-height: .4rem color: #ccc ellipsis() .item-button line-height: .44rem margin-top: .16rem background: #ff9300 padding: 0 .2rem border-radius: .06rem color: #fff 學習地圖對應: 慕克網 > 步骤二：Vue基础+仿去哪网电商实战 > 4.Vue与React高级框架开发 > 项目-首页开发 > 2-9.Vue项目首页-热销推荐组件开发 vue 组件的声明 "},"慕課網/01.首頁開發/13.周末遊組件開發/13.周末遊組件開發.html":{"url":"慕課網/01.首頁開發/13.周末遊組件開發/13.周末遊組件開發.html","title":"13.周末遊組件開發","keywords":"","body":"周末遊組件開發 此次預完成功能 初始功能創建 組件內容開發 slot 用法 01. 此次預完成功能 完成周末遊區域 02. 複製並建立周末遊組件 步驟一 : 複製 {workspace}\\{project_name}\\src\\pages\\home\\components\\Recommend.vue 並改名為 Weekend.vue 周末去哪兒 {{item.title}} {{item.desc}} {{item.button}} export default { name: 'HomeWeekend', // 1. 改name data () { return { weekendList: [{ id: '0001', imgUrl: 'https://imgs.qunarzz.com/sight/p0/2109/20/204e37770f73cd73a3.water.jpg_200x200_4af12284.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦', button: '查看詳情' }, { id: '0002', imgUrl: 'https://imgs.qunarzz.com/sight/p0/2109/20/204e37770f73cd73a3.water.jpg_200x200_4af12284.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦', button: '查看詳情' }, { id: '0003', imgUrl: 'https://imgs.qunarzz.com/sight/p0/2109/20/204e37770f73cd73a3.water.jpg_200x200_4af12284.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦', button: '查看詳情' }] } } } @import '~styles/mixins.styl' .title margin-top: .2rem line-height: .8rem background: #eee text-indent: .2rem .item overflow: hidden display: flex height: 1.9rem .item-img width: 1.7rem height: 1.7rem padding: .1rem .item-info flex: 1 padding: .1rem min-width: 0 .item-title line-height: .54rem font-size: .32rem ellipsis() .item-desc line-height: .4rem color: #ccc ellipsis() .item-button line-height: .44rem margin-top: .16rem background: #ff9300 padding: 0 .2rem border-radius: .06rem color: #fff 步驟二 : 在主要組件 {workspace}\\{project_name}\\src\\pages\\home\\Home.vue 中註冊此組件 import HomeHeader from './components/Header' import HomeSwiper from './components/Swiper' import HomeIcons from './components/Icons' import HomeRecommend from './components/Recommend' import HomeWeekend from './components/Weekend' // 1. 引入 Weekend.vue export default { name: 'Home', components: { HomeHeader, HomeSwiper, HomeIcons, HomeRecommend, HomeWeekend // 2. 註冊 HomeWeekend } } 03. 組件開發與調整 步驟一 : 在模板中新增標籤 周末去哪兒 {{item.title}} {{item.desc}} {{item.button}} 步驟二 : 修改樣式 @import '~styles/mixins.styl' .title margin-top: .2rem line-height: .8rem background: #eee text-indent: .2rem // -- 1. 刪除此區域 -- .item overflow: hidden display: flex height: 1.9rem // -------------------- .item-img width: 1.7rem height: 1.7rem padding: .1rem .item-info flex: 1 padding: .1rem min-width: 0 .item-title line-height: .54rem font-size: .32rem ellipsis() .item-desc line-height: .4rem color: #ccc ellipsis() .item-button line-height: .44rem margin-top: .16rem background: #ff9300 padding: 0 .2rem border-radius: .06rem color: #fff 步驟三 : 修改 data 中的圖片鏈接 export default { name: 'HomeWeekend', data () { return { weekendList: [{ id: '0001', // 替換 imgUrl imgUrl: 'http://img1.qunarzz.com/sight/source/1811/f3/86173f863bef61.jpg_r_640x214_52b003ac.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦', button: '查看詳情' }, { id: '0002', imgUrl: 'http://img1.qunarzz.com/sight/source/1811/f3/86173f863bef61.jpg_r_640x214_52b003ac.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦', button: '查看詳情' }, { id: '0003', imgUrl: 'http://img1.qunarzz.com/sight/source/1811/f3/86173f863bef61.jpg_r_640x214_52b003ac.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦', button: '查看詳情' }] } } } 步驟四 : 新增圖片樣式 @import '~styles/mixins.styl' .title margin-top: .2rem line-height: .8rem background: #eee text-indent: .2rem .item-img-wrapper // 1. 預設撐高圖片區域 overflow hidden height 0 padding-bottom 33.9% // 2. 用圖片寬高比計算出 33.9% .item-img width: 100% // 3. 設定圖片寬度 .item-info flex: 1 padding: .1rem min-width: 0 .item-title line-height: .54rem font-size: .32rem ellipsis() .item-desc line-height: .4rem color: #ccc ellipsis() .item-button line-height: .44rem margin-top: .16rem background: #ff9300 padding: 0 .2rem border-radius: .06rem color: #fff 步驟五 : 刪除查看詳情標籤與數據 周末去哪兒 {{item.title}} {{item.desc}} {{item.button}} export default { name: 'HomeWeekend', data () { return { weekendList: [{ id: '0001', imgUrl: 'http://img1.qunarzz.com/sight/source/1811/f3/86173f863bef61.jpg_r_640x214_52b003ac.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦' }, { id: '0002', imgUrl: 'http://img1.qunarzz.com/sight/source/1811/f3/86173f863bef61.jpg_r_640x214_52b003ac.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦' }, { id: '0003', imgUrl: 'http://img1.qunarzz.com/sight/source/1811/f3/86173f863bef61.jpg_r_640x214_52b003ac.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦' }] } } } 步驟六 : 繼續清除多餘樣式 @import '~styles/mixins.styl' .title line-height: .8rem background: #eee text-indent: .2rem .item-img-wrapper overflow hidden height 0 padding-bottom 33.9% .item-img width: 100% .item-info padding: .1rem .item-title line-height: .54rem font-size: .32rem ellipsis() .item-desc line-height: .4rem color: #ccc ellipsis() 最終 : {workspace}\\{project_name}\\src\\pages\\home\\components\\Weekend.vue 完整內容 周末去哪兒 {{item.title}} {{item.desc}} export default { name: 'HomeWeekend', data () { return { weekendList: [{ id: '0001', imgUrl: 'http://img1.qunarzz.com/sight/source/1811/f3/86173f863bef61.jpg_r_640x214_52b003ac.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦' }, { id: '0002', imgUrl: 'http://img1.qunarzz.com/sight/source/1811/f3/86173f863bef61.jpg_r_640x214_52b003ac.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦' }, { id: '0003', imgUrl: 'http://img1.qunarzz.com/sight/source/1811/f3/86173f863bef61.jpg_r_640x214_52b003ac.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦' }] } } } @import '~styles/mixins.styl' .title line-height: .8rem background: #eee text-indent: .2rem .item-img-wrapper overflow hidden height 0 padding-bottom 33.9% .item-img width: 100% .item-info padding: .1rem .item-title line-height: .54rem font-size: .32rem ellipsis() .item-desc line-height: .4rem color: #ccc ellipsis() 04. slot 用法 步驟一 : 將 {workspace}\\{project_name}\\src\\pages\\home\\components\\Recommend.vue 中的標題替換成 插槽(solt) {{item.title}} {{item.desc}} {{item.button}} export default { name: 'HomeRecommend', data () { return { weekendList: [{ id: '0001', imgUrl: 'https://imgs.qunarzz.com/sight/p0/2109/20/204e37770f73cd73a3.water.jpg_200x200_4af12284.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦', button: '查看詳情' }, { id: '0002', imgUrl: 'https://imgs.qunarzz.com/sight/p0/2109/20/204e37770f73cd73a3.water.jpg_200x200_4af12284.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦', button: '查看詳情' }, { id: '0003', imgUrl: 'https://imgs.qunarzz.com/sight/p0/2109/20/204e37770f73cd73a3.water.jpg_200x200_4af12284.jpg', title: '北京環球度假區', desc: '北京環球度假區旅遊景點推薦', button: '查看詳情' }] } } } @import '~styles/mixins.styl' .title line-height: .8rem background: #eee text-indent: .2rem .item overflow: hidden display: flex height: 1.9rem .item-img width: 1.7rem height: 1.7rem padding: .1rem .item-info flex: 1 padding: .1rem min-width: 0 .item-title line-height: .54rem font-size: .32rem ellipsis() .item-desc line-height: .4rem color: #ccc ellipsis() .item-button line-height: .44rem margin-top: .16rem background: #ff9300 padding: 0 .2rem border-radius: .06rem color: #fff 最終 : 在 {workspace}\\{project_name}\\src\\pages\\home\\Home.vue 中新增變數，並傳值。這樣就可形成 簡易的父組件往子組件傳值的方法 {{titleRecommend}} import HomeHeader from './components/Header' import HomeSwiper from './components/Swiper' import HomeIcons from './components/Icons' import HomeRecommend from './components/Recommend' import HomeWeekend from './components/Weekend' export default { name: 'Home', components: { HomeHeader, HomeSwiper, HomeIcons, HomeRecommend, HomeWeekend }, data () { return { titleRecommend: '熱銷推薦' // 1. 新增標題 } } } 學習地圖對應: 慕克網 > 步骤二：Vue基础+仿去哪网电商实战 > 4.Vue与React高级框架开发 > 项目-首页开发 > 2-10.Vue项目首页-开发周末游组件 2-4 編譯作用域與 Slot 插槽 "},"慕課網/01.首頁開發/14.模擬發送ajax請求/14.模擬發送ajax請求.html":{"url":"慕課網/01.首頁開發/14.模擬發送ajax請求/14.模擬發送ajax請求.html","title":"14.模擬發送ajax請求","keywords":"","body":"模擬發送 ajax 請求 axios 是什麼? axios 安裝 生命週期之 mounted 與 created axios 實際操作 01. axios 是什麼? axios 可以實現跨平台的數據請求，在瀏覽器端可以發送 XHR 請求，在服務器端可以發送 HTTP 請求 當然你也可以使用瀏覽器自帶的 fetch 請求，或者 vue 以前推薦的 vue-resource，但目前官方推薦的是 axios 請求 02. axios 安裝 步驟一 : 開啟終端機，並執行 npm install axios --save 最終 : 安裝好就可以執行 npm run dev 來運行環境 03. 生命週期之 mounted 與 created created : 在模板渲染成 HTML 前，即初始化某些屬性值，才在渲染成視圖 mounted : 在模板渲染成 HTML 後，即初始化頁面完成後，在對 dom 節點做的一些需要的操作 04. axios 實際操作 步驟一 : 進入 {workspace}\\{project_name}\\src\\pages\\home\\Home.vue ，引入 axios，並實做測試連線用方法 import HomeHeader from './components/Header' import HomeSwiper from './components/Swiper' import HomeIcons from './components/Icons' import HomeRecommend from './components/Recommend' import HomeWeekend from './components/Weekend' import axios from 'axios' // 1. 引入 axios export default { name: 'Home', components: { HomeHeader, HomeSwiper, HomeIcons, HomeRecommend, HomeWeekend }, // 3. 方法的實作 methods: { // 4. 獲取異步數據 getHomeInfo () { axios.get('/api/index.json') .then(this.getHomeInfoSucc) }, getHomeInfoSucc (res) { console.log(res) } }, // 2. 添加生命週期函數，讓頁面掛載好時執行內容 mounted () { this.getHomeInfo() } } 步驟二 : 在 {workspace}\\{project_name}\\static 目錄新增檔案如 {workspace}\\{project_name}\\static\\mock\\index.json ，此檔案可以模擬後需的後端傳前端數據，且只有在 static 下的目錄才可以做外部訪問 \"ret\": true : 表示服務器正確的響應了請求 data : 表示服務器返回的數據 { \"ret\": true, \"data\": { \"city\": \"北京\", \"swiperList\": [ { \"id\": \"0001\", \"imgUrl\": \"http://img1.qunarzz.com/piao/fusion/1801/1a/94428c6dea109402.jpg_640x200_2cf590d8.jpg\" }, { \"id\": \"0002\", \"imgUrl\": \"http://img1.qunarzz.com/piao/fusion/1802/42/7c92b9a381e46402.jpg_640x200_1cdce2a4.jpg\" }, { \"id\": \"0003\", \"imgUrl\": \"http://img1.qunarzz.com/piao/fusion/1802/51/e78f936a5b404102.jpg_640x200_c14f0b3a.jpg\" }, { \"id\": \"0004\", \"imgUrl\": \"http://img1.qunarzz.com/piao/fusion/1712/91/a275569091681d02.jpg_640x200_0519ccb9.jpg\" } ], \"iconList\": [ { \"id\": \"0001\", \"imgUrl\": \"http://img1.qunarzz.com/piao/fusion/1611/54/ace00878a52d9702.png\", \"desc\": \"景點門票\" }, { \"id\": \"0002\", \"imgUrl\": \"http://img1.qunarzz.com/piao/fusion/1711/df/86cbcfc533330d02.png\", \"desc\": \"滑雪季\" }, { \"id\": \"0003\", \"imgUrl\": \"http://img1.qunarzz.com/piao/fusion/1710/a6/83f636bd75ae6302.png\", \"desc\": \"泡溫泉\" }, { \"id\": \"0004\", \"imgUrl\": \"http://img1.qunarzz.com/piao/fusion/1611/35/2640cab202c41b02.png\", \"desc\": \"動植園\" }, { \"id\": \"0005\", \"imgUrl\": \"http://img1.qunarzz.com/piao/fusion/1611/d0/e09575e66f4aa402.png\", \"desc\": \"遊樂園\" }, { \"id\": \"0006\", \"imgUrl\": \"http://img1.qunarzz.com/piao/fusion/1611/59/569d3c096e542502.png\", \"desc\": \"必遊榜單\" }, { \"id\": \"0007\", \"imgUrl\": \"http://img1.qunarzz.com/piao/fusion/1611/17/4bd370f3eb1acd02.png\", \"desc\": \"演出\" }, { \"id\": \"0008\", \"imgUrl\": \"http://img1.qunarzz.com/piao/fusion/1611/7f/b1ea3c8c7fb6db02.png\", \"desc\": \"城市觀光\" }, { \"id\": \"0009\", \"imgUrl\": \"http://img1.qunarzz.com/piao/fusion/1611/a9/ffc620dbda9b9c02.png\", \"desc\": \"一日遊\" } ], \"recommendList\": [ { \"id\": \"0001\", \"imgUrl\": \"http://img1.qunarzz.com/sight/p0/1409/19/adca619faaab0898245dc4ec482b5722.jpg_140x140_80f63803.jpg\", \"title\": \"故宮\", \"desc\": \"東方宮殿建築代表，世界宮殿建築典範\" }, { \"id\": \"0002\", \"imgUrl\": \"http://img1.qunarzz.com/sight/p0/1511/d2/d2aec2dfc5aa771290.water.jpg_140x140_abb362a7.jpg\", \"title\": \"南山滑雪場\", \"desc\": \"北京專業級滑雪聖地\" }, { \"id\": \"0003\", \"imgUrl\": \"http://img1.qunarzz.com/sight/p0/1501/f4/f467729126949c3a.water.jpg_140x140_ef235b1c.jpg\", \"title\": \"天安門廣場\", \"desc\": \"我愛北京天安門，天安門上太陽升\" }, { \"id\": \"0004\", \"imgUrl\": \"http://img1.qunarzz.com/sight/p0/1501/40/40b2b6c951b28fdd.water.jpg_140x140_1c863e5c.jpg\", \"title\": \"水立方\", \"desc\": \"中國的榮耀，陽光下的晶瑩水滴\" }, { \"id\": \"0005\", \"imgUrl\": \"http://img1.qunarzz.com/sight/p0/201308/23/b283071686e64dfec8d65eac.jpg_140x140_8c5a7c49.jpg\", \"title\": \"溫都水城養生館\", \"desc\": \"各種亞熱帶植物掩映其間仿佛置身熱帶雨林\" } ], \"weekendList\": [ { \"id\": \"0001\", \"imgUrl\": \"http://img1.qunarzz.com/sight/source/1510/6e/1ea71e2f04e.jpg_r_640x214_aa6f091d.jpg\", \"title\": \"北京溫泉排行榜\", \"desc\": \"細數北京溫泉，溫暖你的冬天\" }, { \"id\": \"0002\", \"imgUrl\": \"http://img1.qunarzz.com/sight/source/1505/aa/7baaf8a851d221.jpg_r_640x214_1431200f.jpg\", \"title\": \"北京必遊TOP10\", \"desc\": \"來北京必去的景點非這些地方莫屬\" }, { \"id\": \"0003\", \"imgUrl\": \"http://img1.qunarzz.com/sight/source/1505/9e/21df651e19af5d.jpg_r_640x214_3ea5bb38.jpg\", \"title\": \"尋找北京的皇城範兒\", \"desc\": \"數百年的宮廷廟宇，至今依舊威嚴霸氣\" }, { \"id\": \"0004\", \"imgUrl\": \"http://img1.qunarzz.com/sight/source/1505/ce/bc89bc2f0e33ea.jpg_r_640x214_3e408453.jpg\", \"title\": \"學生最愛的博物館\", \"desc\": \"周末幹嘛？北京很多博物館已經免費開放啦\" }, { \"id\": \"0005\", \"imgUrl\": \"http://img1.qunarzz.com/sight/source/1505/b2/fde1bfcd057a52.jpg_r_640x214_bbf3fa44.jpg\", \"title\": \"兒童劇場，孩子的樂園\", \"desc\": \"帶寶貝觀看演出，近距離體驗藝術的無窮魅力\" } ] } } 步驟三 : 在 {workspace}\\{project_name}\\.gitignore 中添加字段 static/mock 表示 git 管控時忽略該目錄下的所有文件 .DS_Store node_modules/ /dist/ npm-debug.log* yarn-debug.log* yarn-error.log* static/mock # Editor directories and files .idea .vscode *.suo *.ntvs* *.njsproj *.sln 最終 : 在 {workspace}\\{project_name}\\config\\index.js 新增轉發機制 (此做用是在後端 api 還沒開發完前，在 localhost 先做模擬數據 ; 實際上這個行為是 webpack-dev-server 提供的) 需要安裝 \"axios\": \"^0.24.0\" 的版本才可以使用 ^api 的方式，若安裝 \"axios\": \"^0.25.0\" 只能使用 /api // ... assetsSubDirectory: 'static', assetsPublicPath: '/', proxyTable: { // 1. 當我們請求 api 目錄時執行以下動作 '/api': { target: 'http://localhost:8080', // 2. 轉發到當前服務器的 8080 埠號上 pathRewrite: { // 3. 但需要替換路徑 '^api': '/static/mock' // 4. 一旦請求的地址是以 api 做開頭，那就替換成 /static/mock 路徑 } } }, // ... 學習地圖對應: 慕克網 > 步骤二：Vue基础+仿去哪网电商实战 > 4.Vue与React高级框架开发 > 项目-首页开发 > 2-11.Vue项目首页-使用axios发送ajax请求 Vue生命周期中mounted和created的区别 [Vue.js] Vue的生命周期 前端 | JS Promise：axios 请求结果后面的 .then() 是什么意思？ JavaScript Promise 使用 Promise XMLHttpRequest — JavaScript 發送 HTTP 請求 "},"慕課網/01.首頁開發/15.父子組件傳值/15.父子組件傳值.html":{"url":"慕課網/01.首頁開發/15.父子組件傳值/15.父子組件傳值.html","title":"15.父子組件傳值","keywords":"","body":"父子組件傳值 修改 Hader 使資料源為父子組件傳值 修改 Swiper 使資料源為父子組件傳值 怎麼將其他的組件改成父子組件傳值呢 ? 讓 Icons 組件不左右滾動 怎麼修改項目名稱 ? 01. 修改 Hader 使資料源為父子組件傳值 步驟一 : 在 {workspace}\\{project_name}\\src\\pages\\home\\Home.vue 新增父組件的值，並傳遞給子組件 {workspace}\\{project_name}\\src\\pages\\home\\components\\Header.vue :city : 表示子組件接收參數的參數 data 中的 city 表示我們所設定的參數 :city=\"city\" : 表示子組件中名叫 city 的參數要接收父組件傳的 city 當值 import HomeHeader from './components/Header' import HomeSwiper from './components/Swiper' import HomeIcons from './components/Icons' import HomeRecommend from './components/Recommend' import HomeWeekend from './components/Weekend' import axios from 'axios' export default { name: 'Home', components: { HomeHeader, HomeSwiper, HomeIcons, HomeRecommend, HomeWeekend }, data () { return { city: '' // 1. 設定參數值 } }, methods: { getHomeInfo () { axios.get('/static/mock/index.json') .then(this.getHomeInfoSucc) }, getHomeInfoSucc (res) { console.log(res) } }, mounted () { this.getHomeInfo() } } 步驟二 : 子組件 {workspace}\\{project_name}\\src\\pages\\home\\components\\Header.vue 接收父組件 {workspace}\\{project_name}\\src\\pages\\home\\Home.vue 傳過來的值 &#xe624; &#xe632; 輸入城市/景點/遊玩主题 {{this.city}} &#xe64a; export default { name: 'HomeHeader', // 1. 設定接收的參數與參數類型 props: { city: String // 3. String 表示接收的參數型態必須是 String 否則會報錯 } } @import '~styles/variables.styl' .header display: flex line-height: $headerHeight background: $bgColor color: #fff .header-left width: .64rem float: left .back-icon text-align: center font-size: .4rem .header-input flex: 1 height: .64rem line-height: .64rem margin-top: .12rem margin-left: .2rem padding-left: .2rem background: #fff border-radius: .1rem color: #ccc .header-right width: 1.24rem float: right text-align: center .arrow-icon margin-left: -.04rem font-size: .24rem 最終 : 修改 {workspace}\\{project_name}\\src\\pages\\home\\Home.vue ，取得 ajax 回傳的 data 並賦值 import HomeHeader from './components/Header' import HomeSwiper from './components/Swiper' import HomeIcons from './components/Icons' import HomeRecommend from './components/Recommend' import HomeWeekend from './components/Weekend' import axios from 'axios' export default { name: 'Home', components: { HomeHeader, HomeSwiper, HomeIcons, HomeRecommend, HomeWeekend }, data () { return { city: '' } }, methods: { getHomeInfo () { axios.get('/static/mock/index.json') .then(this.getHomeInfoSucc) }, getHomeInfoSucc (res) { res = res.data if (res.ret && res.data) { // 判斷後端成功響應，且有值 const data = res.data this.city = data.city } } }, mounted () { this.getHomeInfo() } } 02. 修改 Swiper 使資料源為父子組件傳值 步驟一 : 在 {workspace}\\{project_name}\\src\\pages\\home\\Home.vue 新增父組件的值，並傳遞給子組件 {workspace}\\{project_name}\\src\\pages\\home\\components\\Swiper.vue import HomeHeader from './components/Header' import HomeSwiper from './components/Swiper' import HomeIcons from './components/Icons' import HomeRecommend from './components/Recommend' import HomeWeekend from './components/Weekend' import axios from 'axios' export default { name: 'Home', components: { HomeHeader, HomeSwiper, HomeIcons, HomeRecommend, HomeWeekend }, data () { return { city: '', swiperList: [] // 1. 添加 swiperList 數組 } }, methods: { getHomeInfo () { axios.get('/static/mock/index.json') .then(this.getHomeInfoSucc) }, getHomeInfoSucc (res) { res = res.data if (res.ret && res.data) { const data = res.data this.city = data.city this.swiperList = data.swiperList // 2. 設定 swiperList 值，並且此值來源於後端請求 } } }, mounted () { this.getHomeInfo() } } 步驟二 : 修改 {workspace}\\{project_name}\\src\\pages\\home\\components\\Swiper.vue 以接收父組件傳遞之參數 export default { name: 'HomeSwiper', // 1. 使用 list 接收父組件傳遞的參數，並使用 Array 作為變數型態 props: { list: Array }, data () { return { swiperOption: { pagination: '.swiper-pagination', loop: true } } } } .wrapper >>> .swiper-pagination-bullet-active background: #fff !important .wrapper overflow hidden width:100% height:0 padding-bottom:25.3% background:#eee .swiper-img width: 100% 步驟三 : 在上一個步驟創建完畢後，就可以成功接收數組，但會發現頁面顯示的首圖反而是 ajax 中的最後一張 ? 而這原因是因為 swiper 一開始是由空數組建立的，在接收到後端參數後才渲染所造成的原因。要解這個問題的方法只要在 {workspace}\\{project_name}\\src\\pages\\home\\components\\Swiper.vue 中的 swiper 添加一個 v-if=\"list.length\" 的判斷就好，這樣就會在有值的時候才進行創建 步驟四 : 在設定好資料後，會發現圖片的比例高度不夠，這時可以再進行調整 .wrapper >>> .swiper-pagination-bullet-active background: #fff !important .wrapper overflow hidden width:100% height:0 padding-bottom: 31.3%; // 將此比例由 25.3% 調整至 31.3% background:#eee .swiper-img width: 100% 步驟五 : 添加 computed 計算屬性，讓空數組的判斷在此進行，優化頁面內容 export default { name: 'HomeSwiper', props: { list: Array }, data () { return { swiperOption: { pagination: '.swiper-pagination', loop: true } } }, // 1. 添加計算屬性 computed: { showSwiper () { return this.list.length } } } .wrapper >>> .swiper-pagination-bullet-active background: #fff !important .wrapper overflow hidden width:100% height:0 padding-bottom: 31.3%; background:#eee .swiper-img width: 100% 03. 怎麼將其他的組件改成父子組件傳值呢 ? 其實上面兩個方法已經演示了如何操作的方法，讓我們在這邊自己修改吧 ! 但是你也可以 進入 github 下載 ，下載好後此次項目為 vue1 這個 project 04. 讓 Icons 組件不左右滾動 步驟一 : 設定 options 在 swiper 上 {{item.desc}} 步驟二 : 設定參數值，作用為禁止自動撥放 data () { return { swiperOption: { autoplay: false } } }, 05. 怎麼修改項目名稱 ? 步驟一 : 將 {workspace}\\{project_name} 的 project_name 改成你要的新名子 步驟二 : 修改 {workspace}\\{project_name}\\package.json 文件中的 name 參數值 //... \"name\": \"vue1\", //... 步驟三 : 刪除 {workspace}\\{project_name}\\node_modules 目錄 最終 : 執行 npm run install ，執行完畢即可 學習地圖對應: 慕克網 > 步骤二：Vue基础+仿去哪网电商实战 > 4.Vue与React高级框架开发 > 项目-首页开发 > 2-12.Vue项目首页-首页父子组组件间传值 Vue父子组件传值 —— props & $emit Prop 詳細說明 vue 子组件 props 参数类型问题 Vue 修改项目名称 "}}